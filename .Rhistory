uu = multFac(facList=facs,parallel="no",ncore=2,method="GA",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",minInd=6,niter=30)
uu
uu = multFac(facList=facs,parallel="no",ncore=2,method="GA",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",minInd=6,niter=3)
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="GA",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
uu = multFac(facList=facs,parallel="no",ncore=2,method="GA",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="GA",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
100/999
.1*100
.1/100
.1*100
100/.1
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="GA",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
uu[[1]]$out
uu[[1]]$out$fitness
str(uu[[1]]$out)
?tabuSearch
summary(uu[[1]]$out)
str(summary(uu[[1]]$out))
summary(uu[[1]]$out)$fitness
summary(uu[[1]]$out)$fn
summary(uu[[1]]$out,verbose=T)
summary(uu[[1]]$out)
str(summary(uu[[1]]$out))
uu[[1]]$out
summary(uu[[1]]$out)
summary(uu[[1]]$out)$
summary(uu[[1]]$out)$val
o =summary(uu[[1]]$out)
str(uu[[1]]$out)
uu[[1]]$out$summary
?tabuSearch
summary(uu[[1]]$out)
summary(uu[[1]]$out)$Results
plot(uu[[1]]$out)
uu[[1]]$out
unlist(uu[[1]]$out)
summary(uu[[1]]$out)
unlist(summary(uu[[1]]$out))
print(uu[[1]]$out)
summary(uu[[1]]$out)
max(uu[[1]]$out$eUtilityKeep)
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
?tabuSearch
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="RMSEA",niter=3)
uu
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="tabuSearch",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
uu = multFac(facList=facs,parallel="no",ncore=2,method="rgenoud",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
?genoud
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
#document()
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
setwd("/Users/RJacobucci/Documents/Github/autoSEM")
#setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
uu = multFac(facList=facs,parallel="no",ncore=2,method="rgenoud",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
27*1.2
28*.23
20*1.2
uu = multFac(facList=facs,parallel="no",ncore=2,method="rgenoud",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu = multFac(facList=facs,parallel="no",ncore=2,method="rgenoud",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
facs <- 2
uu = multFac(facList=facs,parallel="no",ncore=2,method="rgenoud",
data=myData,orth=FALSE,CV=FALSE,
varList=rrr,criterion="BIC",niter=3)
uu
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
#setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
library(parallel)
mod1 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 0*x5 + 0*x6 + 0*x7 + 0.3*x8 + 0*x9
f1~~1*f1
'
mod2 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 1*x5
f2 =~ 1*x6 + 1*x7 + 1*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f1~~0*f2
'
mod3 <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
crit = c("BIC","RMSEA")
cv = c(FALSE,TRUE,"boot")
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
iters=20
count=0
mat = matrix(NA,iters*3*2*3,4)
mods = c(mod1,mod2,mod3)
for(i in 1:iters){
for(j in 1:length(mods)){
for(o in 1:length(crit)){
for(p in 1:length(cv)){
count=count+1
if(crit[o]=="BIC" & cv[p] == TRUE | crit[o]=="BIC" & cv[p] == "boot"){
mat[count,1] = NA
mat[count,2] = NA
mat[count,3] = NA
mat[count,4] = NA
}else{
myData = simulateData(mods[[j]],model.type="cfa",sample.nobs=500)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="rgenoud",data=myData,orth=FALSE,CV=cv[p],
varList=rrr,criterion=crit[o],minInd=3,niter=30)
fits = c(uu[[1]]$fit,uu[[2]]$fit,uu[[3]]$fit,uu[[4]]$fit)
mat[count,1] = j
mat[count,2] = paste(which(min(fits)==fits),collapse="")
mat[count,3] = crit[o]
mat[count,4] = cv[p]
}
}
}
}
print(i)
}
library(lavaan)
library(devtools)
library(rgenoud)
library(tabuSearch)
library(GA)
#setwd("/Users/RJacobucci/Documents/Github/autoSEM")
setwd("C:/Users/jacobucc/Documents/Github/autoSEM")
#setwd("./regsem")
document()
setwd("..")
install("autoSEM")
#document()
#document("C:/Users/jacobucc/Documents/GitHub/regsem")
detach("package:autoSEM", unload=TRUE)
library(autoSEM)
library(parallel)
mod1 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 0*x5 + 0*x6 + 0*x7 + 0.3*x8 + 0*x9
f1~~1*f1
'
mod2 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 1*x5
f2 =~ 1*x6 + 1*x7 + 1*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f1~~0*f2
'
mod3 <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
crit = c("BIC","RMSEA")
cv = c(FALSE,TRUE,"boot")
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
iters=20
count=0
mat = matrix(NA,iters*3*2*3,4)
mods = c(mod1,mod2,mod3)
for(i in 1:iters){
for(j in 1:length(mods)){
for(o in 1:length(crit)){
for(p in 1:length(cv)){
count=count+1
if(crit[o]=="BIC" & cv[p] == TRUE | crit[o]=="BIC" & cv[p] == "boot"){
mat[count,1] = NA
mat[count,2] = NA
mat[count,3] = NA
mat[count,4] = NA
}else{
myData = simulateData(mods[[j]],model.type="cfa",sample.nobs=500)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="rgenoud",data=myData,orth=FALSE,CV=cv[p],
varList=rrr,criterion=crit[o],minInd=3,niter=30)
fits = c(uu[[1]]$fit,uu[[2]]$fit,uu[[3]]$fit,uu[[4]]$fit)
mat[count,1] = j
mat[count,2] = paste(which(min(fits)==fits),collapse="")
mat[count,3] = crit[o]
mat[count,4] = cv[p]
}
}
}
}
print(i)
}
install.packages("rgenoud")
library(rgenoud)
library(parallel)
mod1 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 0*x5 + 0*x6 + 0*x7 + 0.3*x8 + 0*x9
f1~~1*f1
'
mod2 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 1*x5
f2 =~ 1*x6 + 1*x7 + 1*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f1~~0*f2
'
mod3 <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
crit = c("BIC","RMSEA")
cv = c(FALSE,TRUE,"boot")
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
iters=20
count=0
mat = matrix(NA,iters*3*2*3,4)
mods = c(mod1,mod2,mod3)
for(i in 1:iters){
for(j in 1:length(mods)){
for(o in 1:length(crit)){
for(p in 1:length(cv)){
count=count+1
if(crit[o]=="BIC" & cv[p] == TRUE | crit[o]=="BIC" & cv[p] == "boot"){
mat[count,1] = NA
mat[count,2] = NA
mat[count,3] = NA
mat[count,4] = NA
}else{
myData = simulateData(mods[[j]],model.type="cfa",sample.nobs=500)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="rgenoud",data=myData,orth=FALSE,CV=cv[p],
varList=rrr,criterion=crit[o],minInd=3,niter=30)
fits = c(uu[[1]]$fit,uu[[2]]$fit,uu[[3]]$fit,uu[[4]]$fit)
mat[count,1] = j
mat[count,2] = paste(which(min(fits)==fits),collapse="")
mat[count,3] = crit[o]
mat[count,4] = cv[p]
}
}
}
}
print(i)
}
