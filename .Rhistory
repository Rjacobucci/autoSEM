library(autoSEM)
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:3
uu = multFac(facList=facs,parallel="yes",ncore=4,method="aco_rj",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=40)
snowfall::sfStop()
snowfall::sfInit( parallel=TRUE, cpus=ncore)
ncore=4
snowfall::sfInit( parallel=TRUE, cpus=ncore)
snowfall::sfInit(parallel=TRUE, cpus=ncore)
library(snowfall)
snowfall::sfInit(parallel=TRUE, cpus=ncore)
library(autoSEM)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="aco_rj",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=40)
uu
library(autoSEM)
out = autoSEM(method="aco_rj",data=myData,nfac=1,
varList=list(f1.vars),orth=TRUE,CV=FALSE,
criterion="BIC",minInd=3,niter=50,min.improve=150)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="tabu_rj",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=40)
uu
library(autoSEM)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="tabu_rj",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=4)
uu
uu = multFac(facList=facs,parallel="yes",ncore=4,method="GA",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=4)
uu
library(autoSEM)
j=1
cat("mod",j)
c("mod",j)
cat("mod",j,sep="")
library(parallel)
mod1 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 0*x5 + 0*x6 + 0*x7 + 0.3*x8 + 0*x9
f1~~1*f1
'
mod2 <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 1*x5
f2 =~ 1*x6 + 1*x7 + 1*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f1~~0*f2
'
mod3 <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
crit = c("BIC","RMSEA","NCP")
cv = c(FALSE,TRUE,"boot")
method = c("GA","aco_rj","tabu_rj")
iters = c(20,50,100)
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
sim.iters=20
count=0
mat = matrix(NA,sim.iters*length(crit)*length(cv)*length(method)*length(iters)*length(mod),4+5)
mods = c(mod1,mod2,mod3)
for(i in 1:sim.iters){
for(j in 1:length(mods)){
for(o in 1:length(crit)){
for(p in 1:length(cv)){
for(m in 1:length(method))
for(tt in 1:length(iters))
count=count+1
if(crit[o]=="BIC" & cv[p] == TRUE | crit[o]=="BIC" & cv[p] == "boot"){
mat[count,1] = NA
mat[count,2] = NA
mat[count,3] = NA
mat[count,4] = NA
mat[count,5] = cat("mod",j,sep="")
mat[count,6] = crit[o]
mat[count,7] = cv[p]
mat[count,8] = method[m]
mat[count,9] = iters[tt]
}else{
myData = simulateData(mods[[j]],model.type="cfa",sample.nobs=500)
uu = multFac(facList=facs,parallel="yes",ncore=4,method=method[m],data=myData,orth=FALSE,CV=cv[p],
varList=rrr,criterion=crit[o],minInd=3,niter=iters)
#fits = c(uu[[1]]$fit,uu[[2]]$fit,uu[[3]]$fit,uu[[4]]$fit)
mat[count,1] = uu[[1]]$fit
mat[count,2] = uu[[2]]$fit
mat[count,3] = uu[[3]]$fit
mat[count,4] = uu[[4]]$fit
mat[count,5] = cat("mod",j,sep="")
mat[count,6] = crit[o]
mat[count,7] = cv[p]
mat[count,8] = method[m]
mat[count,9] = iters[tt]
}
}
}
}
}
}
print(i)
}
crit = c("BIC","RMSEA","NCP")
cv = c(FALSE,TRUE,"boot")
method = c("GA","aco_rj","tabu_rj")
iters = c(20,50,100)
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
sim.iters=20
count=0
mat = matrix(NA,sim.iters*length(crit)*length(cv)*length(method)*length(iters)*length(mod),4+5)
mods = c(mod1,mod2,mod3)
for(i in 1:sim.iters){
for(j in 1:length(mods)){
for(o in 1:length(crit)){
for(p in 1:length(cv)){
for(m in 1:length(method))
for(tt in 1:length(iters))
count=count+1
if(crit[o]=="BIC" & cv[p] == TRUE | crit[o]=="BIC" & cv[p] == "boot"){
mat[count,1] = NA
mat[count,2] = NA
mat[count,3] = NA
mat[count,4] = NA
mat[count,5] = cat("mod",j,sep="")
mat[count,6] = crit[o]
mat[count,7] = cv[p]
mat[count,8] = method[m]
mat[count,9] = iters[tt]
}else{
myData = simulateData(mods[[j]],model.type="cfa",sample.nobs=500)
uu = multFac(facList=facs,parallel="yes",ncore=4,method=method[m],data=myData,orth=FALSE,CV=cv[p],
varList=rrr,criterion=crit[o],minInd=3,niter=iters)
#fits = c(uu[[1]]$fit,uu[[2]]$fit,uu[[3]]$fit,uu[[4]]$fit)
mat[count,1] = uu[[1]]$fit
mat[count,2] = uu[[2]]$fit
mat[count,3] = uu[[3]]$fit
mat[count,4] = uu[[4]]$fit
mat[count,5] = cat("mod",j,sep="")
mat[count,6] = crit[o]
mat[count,7] = cv[p]
mat[count,8] = method[m]
mat[count,9] = iters[tt]
}
}
}
}
}
}
print(i)
}
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
sim.iters=20
count=0
mat = matrix(NA,sim.iters*length(crit)*length(cv)*length(method)*length(iters)*length(mod),4+5)
mods = c(mod1,mod2,mod3)
for(i in 1:sim.iters){
for(j in 1:length(mods)){
for(o in 1:length(crit)){
for(p in 1:length(cv)){
for(m in 1:length(method))
for(tt in 1:length(iters))
count=count+1
if(crit[o]=="BIC" & cv[p] == TRUE | crit[o]=="BIC" & cv[p] == "boot"){
mat[count,1] = NA
mat[count,2] = NA
mat[count,3] = NA
mat[count,4] = NA
mat[count,5] = cat("mod",j,sep="")
mat[count,6] = crit[o]
mat[count,7] = cv[p]
mat[count,8] = method[m]
mat[count,9] = iters[tt]
}else{
myData = simulateData(mods[[j]],model.type="cfa",sample.nobs=500)
uu = multFac(facList=facs,parallel="yes",ncore=4,method=method[m],data=myData,orth=FALSE,CV=cv[p],
varList=rrr,criterion=crit[o],minInd=3,niter=iters[tt])
#fits = c(uu[[1]]$fit,uu[[2]]$fit,uu[[3]]$fit,uu[[4]]$fit)
mat[count,1] = uu[[1]]$fit
mat[count,2] = uu[[2]]$fit
mat[count,3] = uu[[3]]$fit
mat[count,4] = uu[[4]]$fit
mat[count,5] = cat("mod",j,sep="")
mat[count,6] = crit[o]
mat[count,7] = cv[p]
mat[count,8] = method[m]
mat[count,9] = iters[tt]
}
}
}
}
}
library(autoSEM)
library(autoSEM)
library(autoSEM)
library(autoSEM)
library(autoSEM)
library(lavaan)
mod <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
mod <- '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 0*x5 + 0*x6 + 0*x7 + 0.3*x8 + 0*x9
f1~~1*f1
'
myData = simulateData(mod,model.type="cfa",sample.nobs=500)
HS.model <- '
f1 =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 '
fit <- cfa(HS.model, data=myData)
fitmeasures(fit)
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:3
uu = multFac(facList=facs,parallel="yes",ncore=4,method="GA",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=4)
library(autoSEM)
uu = multFac(facList=facs,parallel="yes",ncore=4,method="GA",
data=myData,orth=T,CV=FALSE,
varList=rrr,criterion="BIC",niter=4)
head(HolzingerSwineford1939)
HS.model <- '
f1 =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f1 ~ grade + school + ageyr + sex
'
fit <- cfa(HS.model, data=HolzingerSwineford1939)
parTable(fit)
pars = parTable(fit)
pars[,"op"]
pars[,"op"]["~"]
pars["~","op"]
pars[pars[,"op"] == "~]"
pars[pars[,"op"] == "~"]
pars[,pars[,"op"] == "~"]
pars[pars[,"op"] == "~",]
?cfa
library(autoSEM)
out = autoSEM(method="tabu_rj",data=myData,nfac=3,
varList=list(f1.vars),CV=FALSE,
criterion="BIC",minInd=3,niter=40)
out = autoSEM(method="tabu_rj",data=myData,nfac=3,lav.control=list(std.lv=FALSE),
varList=list(f1.vars),CV=FALSE,
criterion="BIC",minInd=3,niter=40)
library(autoSEM)
library(autoSEM)
library(autoSEM)
library(lavaan)
myData =  HolzingerSwineford1939[,7:15]
HS.model <- ' visual =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
out = autoSEM(method="aco_rj",data=myData,nfac=1,lav.control=list(std.lv=FALSE),
varList=list(f1.vars),CV="none",
criterion="NCP",minInd=3,niter=40)
out = autoSEM(method="aco_rj",data=myData,nfac=1,lav.control=list(std.lv=FALSE),
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
out = autoSEM(method="aco_rj",data=myData,nfac=1,lav.control=list(std.lv=FALSE),
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
out
out = autoSEM(method="GA",data=myData,nfac=1,lav.control=list(std.lv=FALSE),
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
out
str(out)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
out
str(out)
head(myData)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out
str(out)
?GA
?ga
?cfa
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out
lav.control = list(std.lv=TRUE)
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control
lav.control = as.character(std.lv=TRUE)
lav.control = as.character("std.lv=TRUE")
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control
fit <- cfa(HS.model, data=HolzingerSwineford1939,as.formula(lav.control))
lav.control = list("std.lv=TRUE")
fit <- cfa(HS.model, data=HolzingerSwineford1939,unlist(lav.control))
unlist(lav.control)
fit <- cfa(HS.model, data=HolzingerSwineford1939,unlist(lav.control)[1])
fit <- cfa(HS.model, data=HolzingerSwineford1939,parse(unlist(lav.control)))
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control = list(std.lv=TRUE)
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control
as.numeric(unlist(lav.control))
as.string(unlist(lav.control))
unlist(lav.control)
lav.control = c(std.lv=TRUE)
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
library(autoSEM)
out = autoSEM(method="aco_rj",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out
str(out)
lav.control = c(orth=TRUE,std.lv=TRUE)
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control
unlist(lav.control)
str(lav.control)
?comb
?cat
lav.control = cat(orth=TRUE,std.lv=TRUE)
lav.control
lav.control = c(orth=TRUE,std.lv=TRUE)
cat(lav.control)
cat(unlist(lav.control))
lav.control = list(orth=TRUE,std.lv=TRUE)
lav.control
unlist(lav.control)
fit <- cfa(HS.model, data=HolzingerSwineford1939,unlist(lav.control))
uu = unlist(lav.control)
str(uu)
sep(uu," ")
paste(uu, sep=" ")
lav.control = c(orth=TRUE,std.lv=TRUE)
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control
lav.control$std.lv
lav.control = list(c(orth=TRUE,std.lv=TRUE))
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control)
lav.control
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control[[1]])
lav.control[[1]]
lav.control = list(orth=TRUE,std.lv=TRUE)
lav.control
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control[1])
fit <- cfa(HS.model, data=HolzingerSwineford1939,lav.control$orth)
lav.control$orth
uu = unlist(lav.control)
uu
str(uu)
list(uu)
uu = unlist(lav.control,use.names=FALSE)
uu
relist(lav.control)
relist(uu)
as.list(orth=TRUE,std.lv=TRUE)
as.list(c(orth=TRUE,std.lv=TRUE))
as.list(c(orth=TRUE,std.lv=TRUE),all.names=TRUE)
as.pairlist(c(orth=TRUE,std.lv=TRUE))
as.pairList(c(orth=TRUE,std.lv=TRUE))
as.pairlist(orth=TRUE,std.lv=TRUE)
as.vector(orth=TRUE,std.lv=TRUE)
as.vector(c(orth=TRUE,std.lv=TRUE))
as.express(c(orth=TRUE,std.lv=TRUE))
as.expression(c(orth=TRUE,std.lv=TRUE))
lav.control = list(orth=TRUE,std.lv=TRUE)
fit <- cfa(HS.model, data=HolzingerSwineford1939,call(unlist(lav.control)))
call(unlist(lav.control))
fit <- cfa(HS.model, data=HolzingerSwineford1939,as.call(unlist(lav.control)))
lav.control = list(orth=TRUE,std.lv=TRUE)
paste(unlist(lav.control))
lav.control = as.character(orth=TRUE,std.lv=TRUE)
lav.control = as.character(orth=TRUE)
lav.control = as.character("orth=TRUE")
fit <- cfa(HS.model, data=HolzingerSwineford1939,call(lav.control))
call(lav.control)
?cfa
fit <- cfa(HS.model, data=HolzingerSwineford1939,call(lav.control))
as.expression(c(orth=TRUE,std.lv=TRUE))
names(lav.control)
lav.control = as.list(orth=TRUE,std.lv=TRUE)
lav.control = list(orth=TRUE,std.lv=TRUE)
names(lav.control)
lav.control
unlist(lav.control)
?string
lav.control = toString(orth=TRUE,std.lv=TRUE)
lav.control = toString(c(orth=TRUE,std.lv=TRUE))
lav.control
lav.control = as.character(c(orth=TRUE,std.lv=TRUE))
lav.control
lav.control = format(c(orth=TRUE,std.lv=TRUE))
lav.control
str(lav.control)
lav.control = paste(c(orth=TRUE,std.lv=TRUE))
lav.control
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,std.lv=TRUE,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out = autoSEM(method="GA",data=myData,nfac=1,do.fit=FALSE,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out = autoSEM(method="GA",data=myData,nfac=1,test=NA,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
out
out = autoSEM(method="GA",data=myData,nfac=1,verbose=TRUE,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=400)
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
out
library(lavaan)
mod = '
f1 =~ 1*x1 + 1*x2 + 1*x3 + 1*x4 + 1*x5 + 1*x6 + 0*x7 + 0*x8 + 0*x9
f1~~1*f1'
myData = simulateData(mod,sample.nobs=300,model.type="cfa")
f1.vars <- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
rrr = list(f1.vars)
facs <- 1:4
out = autoSEM(method="aco_rj",data=myData,nfac=1,varList=list(f1.vars),orth=FALSE,CV=FALSE,
criterion="BIC",minInd=3,aco.iters=100)
out
out = autoSEM(method="GA",data=myData,nfac=1,varList=list(f1.vars),orth=FALSE,CV=FALSE,
criterion="BIC",minInd=3,aco.iters=100)
out
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),orth=FALSE,CV="boot",
criterion="BIC",minInd=3,aco.iters=100)
out
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV=FALSE,
criterion="NCP",minInd=3,niter=40)
out
str(out)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),orth=FALSE,CV="boot",
criterion="RMSEA",minInd=3,aco.iters=100)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),orth=FALSE,CV=FALSE,
criterion="RMSEA",minInd=3,aco.iters=100)
out
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),orth=FALSE,CV=FALSE,
criterion="RMSEA",minInd=3)
out
str(out)
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV="boot",
criterion="NCP",minInd=3,niter=40)
out
str(out)
?bootstrapLavaan
oo = bootstrapLavaan(fit,type="yuan",R=50,FUN=fitmeasures,fit.measures=c("ncp","rmsea"))
oo
fitmeasures(fit)
oo = bootstrapLavaan(fit,type="yuan",R=50,FUN=fitmeasures,fit.measures=c("chisq","rmsea"))
oo
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV="boot",
criterion="NCP",minInd=3,niter=40)
oo$rmsea
oo["rmsea"]
oo
oo[,2]
library(autoSEM)
out = autoSEM(method="GA",data=myData,nfac=1,
varList=list(f1.vars),CV="boot",
criterion="NCP",minInd=3,niter=40)
